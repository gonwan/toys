spring.application.name=kafka-tx

spring.datasource.url=jdbc:h2:mem:test2test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.transaction-id-prefix=gwtx-
# all-in-one, ordered, deduplicated, also implies acks=all, retries>0 and max.in.flight.requests.per.connection<=5.
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.retries=3
spring.kafka.producer.acks=all
spring.kafka.producer.batch-size=16384
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
# or separate config, max.in.flight.requests.per.connection=1
#spring.kafka.producer.retries=3
#spring.kafka.producer.acks=1
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.properties.linger.ms=0
#spring.kafka.producer.properties.max.in.flight.requests.per.connection=1

spring.kafka.consumer.group-id=${spring.application.name}-group
# listener container has its own mechanism for committing offsets.
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.properties.max.poll.interval.ms=600000
spring.kafka.listener.missing-topics-fatal=false

application.kafka-test-topic=kafka_test_topic

#logging.level.org.springframework.transaction=trace
#logging.level.org.springframework.kafka.transaction=debug
#logging.level.org.springframework.jdbc=debug
